import java.awt.*;
import java.awt.event.*;
import javax.swing.*;

public class TicTacToe implements ActionListener {
    JFrame frame = new JFrame("Tic Tac Toe");
    JPanel panel = new JPanel();
    JLabel label = new JLabel("Tic Tac Toe");
    JButton[] buttons = new JButton[9];
    boolean player1Turn = true;

    TicTacToe() {
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(600, 600);
        frame.setLayout(new BorderLayout());
        frame.setLocationRelativeTo(null);

        label.setBackground(Color.darkGray);
        label.setForeground(Color.white);
        label.setFont(new Font("Arial", Font.BOLD, 50));
        label.setHorizontalAlignment(JLabel.CENTER);
        label.setOpaque(true);

        panel.setLayout(new GridLayout(3, 3));
        for (int i = 0; i < 9; i++) {
            buttons[i] = new JButton();
            buttons[i].setFont(new Font("Arial", Font.BOLD, 120));
            buttons[i].setFocusable(false);
            buttons[i].addActionListener(this);
            panel.add(buttons[i]);
        }

        frame.add(label, BorderLayout.NORTH);
        frame.add(panel);
        frame.setVisible(true);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        for (int i = 0; i < 9; i++) {
            if (e.getSource() == buttons[i]) {
                if (buttons[i].getText().equals("")) {
                    if (player1Turn) {
                        buttons[i].setForeground(Color.blue);
                        buttons[i].setText("X");
                        label.setText("O's turn");
                    } else {
                        buttons[i].setForeground(Color.red);
                        buttons[i].setText("O");
                        label.setText("X's turn");
                    }
                    player1Turn = !player1Turn;
                    checkWin();
                }
            }
        }
    }

    public void checkWin() {
        boolean hasWinner = false;

        // Check rows
        for (int i = 0; i < 8; i += 3) {
            if (buttons[i].getText().equals(buttons[i + 1].getText()) && buttons[i].getText().equals(buttons[i + 2].getText()) && !buttons[i].getText().equals("")) {
                showWinner(buttons[i].getText());
                hasWinner = true;
                break;
            }
        }
        // Check columns
        for (int i = 0; i < 3; i++) {
            if (buttons[i].getText().equals(buttons[i + 3].getText()) && buttons[i].getText().equals(buttons[i + 6].getText()) && !buttons[i].getText().equals("")) {
                showWinner(buttons[i].getText());
                hasWinner = true;
                break;
            }
        }
        // Check diagonals
        if (buttons[0].getText().equals(buttons[4].getText()) && buttons[0].getText().equals(buttons[8].getText()) && !buttons[0].getText().equals("")) {
            showWinner(buttons[0].getText());
            hasWinner = true;
        }
        if (buttons[2].getText().equals(buttons[4].getText()) && buttons[2].getText().equals(buttons[6].getText()) && !buttons[2].getText().equals("")) {
            showWinner(buttons[2].getText());
            hasWinner = true;
        }

        // Check for draw if there is no winner
        if (!hasWinner) {
            boolean draw = true;
            for (int i = 0; i < 9; i++) {
                if (buttons[i].getText().equals("")) {
                    draw = false;
                    break;
                }
            }
            if (draw) {
                showDraw();
            }
        }
    }

    public void showWinner(String winner) {
        JOptionPane.showMessageDialog(frame, winner + " wins!");
        resetBoard();
    }

    public void showDraw() {
        JOptionPane.showMessageDialog(frame, "It's a draw!");
        resetBoard();
    }

    public void resetBoard() {
        for (int i = 0; i < 9; i++) {
            buttons[i].setText("");
        }
        label.setText("Tic Tac Toe");
        player1Turn = true;
    }

    public static void main(String[] args) {
        new TicTacToe();
    }
}
